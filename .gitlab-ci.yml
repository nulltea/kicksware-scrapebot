include: /.gitlab/.gitlab-ci.compose.yml

image: dtzar/helm-kubectl:3.3.0

stages:
  - build
  - test
  - deploy
  - check

# build stage steps:

bot.build:
  image: docker/compose:1.25.0
  services:
    - docker:18.09-dind
  stage: build
  tags:
    - k8s
    - bot
  variables:
    DOCKER_HOST: tcp://localhost:2375
  except:
    changes:
      - "*.md"
  before_script:
    - docker version
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_TOKEN $CI_REGISTRY
  script:
    - docker-compose build
  after_script:
    - docker-compose push

# test stage steps:

bot.test:
  stage: test
  tags:
    - k8s
    - bot
  except:
    changes:
      - "*.md"
  before_script:
    - printf "\e[32mTODO"
  script:
    - echo -e "\e[33mYou should implement test... \e[91mI am serisous, dude - \e[1mTESTS ARE IMPORTANT!"

# deploy stage steps:

bot.deploy.k8s:
  stage: deploy
  tags:
    - k8s
    - bot
  only:
    changes:
      - api/**/*
      - model/**/*
      - docker/**/*
      - usecase/**/*
    kubernetes: active
  except:
    changes:
      - "*.md"
  before_script:
    - kubectl create secret docker-registry registry-token -n bot
      --docker-server=$CI_REGISTRY --docker-username=$CI_REGISTRY_USER --docker-password=$CI_REGISTRY_TOKEN --dry-run -o yaml | kubectl apply -f -
    - apk add gettext && envsubst < config/config.$ENV.yaml > config.yaml && kubectl create configmap provider-bot.config -n bot
      --from-file=config.yaml=config.yaml --dry-run -o yaml | kubectl apply -f -
  script:
    - helm upgrade --install -n bot provider-bot provider-bot/

# check stage steps:

bot.check.k8s:
  image: curlimages/curl
  stage: check
  tags:
    - k8s
    - bot
  before_script:
    - echo Waiting half a minute for bot to properly start or fail... && sleep 30s
  script:
    - curl "http://$BOT_ENDPOINT_URL/health/live" -f -o /dev/null || exit 1 | echo -e "\e[Bot is dead! Triggering check job failure"
    - echo -e "\e[36mBot is live. Checking it's readiness:\n"
    - curl "http://$BOT_ENDPOINT_URL/health/ready" -f -o /dev/null || exit 1 | echo -e "\e[91mBot is not ready! Triggering check job failure"
    - echo -e "\e[36mBot is ready. Check job succeeded!"
  retry: 2
